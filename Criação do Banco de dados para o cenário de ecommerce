-- Criação do Banco de dados para o cenário de e-commerce

create database ecommerce;
show databases;
use ecommerce;

-- criar tabela cliente

create table clients(
		idClient int auto_increment primary key,
        Fname varchar(10),
        Minit char(3),
        Lname varchar(20),
        CPF char(11) not null,
        constraint unique_cpf_client unique (CPF),
        Adress varchar(30)
);


insert into Clients (Fname, Minit,Lname, CPF, Adress)
			values ('Maria','M','Silva',123456789,'Rua silva de prata 29'),
				   ('Matheus','O','Pimentel',987654321,'Rua alameda 289'),
				   ('Ricardo','F','Silva',45678913,'Rua alameda vinha 1009'),
				   ('Julia','S','França',789123456,'Rua laranjeuras 861'),
				   ('Roberta','G','Assis',98745631,'avenida koller 19'),
                   ('Isabela','M','Cruz',654789123,'Rua alameda das flores 28');


-- criar tabela produto
-- size equivale a dimensções
create table product(
		idProduct int auto_increment primary key,
        Pname varchar(10) not null,
        Classificatio_kids bool default false,
        category enum('Eletrônico','Vestuário','Brinquedos','Alimentos','Móveis') not null,
        Avaliação float default 0,
        size varchar(10)
);

insert into product (Pname, Classificatio_kids, category, Avaliação,size) values
				  ('Teclado', false, 'Móveis', '4',null),
                  ('Mesa', false, 'Móveis', '3',null),
                  ('B Ben10', true, 'Eletrônico', '5',null),
                  ('Celular', false, 'Eletrônico', '3','3x57x80'),
                  ('Led', true, 'Eletrônico', '5',null);

select * from product;


-- criar tabela pedido
create table orders(
		idOrder int auto_increment primary key,
        idOrderClient int,
        OrderStatus enum('Cancelado','Confirmado','Em processamento') default 'Em processamento',
        OrderDescripition varchar(255),
        SendValue float default 10,
        paymentCash bool default false,
        constraint fk_orders_client foreign key (idOrderClient) references clients (idClient)
);

insert into orders (idOrderClient, OrderStatus, OrderDescripition, SendValue, paymentCash) values
					(1,null,'Compra via app',null,1),
                    (2,null,'Compra via app',null,50),
                    (3,null,'Confirmado',null,1),
			        (4,null,'Compra via site',150,0);

select * from orders;

-- Criar tabela pagamento
-- Para ser continuado no desafio: temine de implementar a tabela e crie conexão com as tabelas necessárias
-- aleem disso, reflita essa modificação no diagrama de esquema relacional

create table payments(
		Idclient int,
        Idpayment int,
        type_paymant enum('Boleto','Cartão','Dois cartões'),
        limitAvailable float,
        primary key (Idclient,Idpayment)
);

show tables;
insert into payments (Idclient, Idpayment, type_paymant, limitAvailable) values
					(1,1,'Boleto',1000),
                    (2,2,'Cartão',1000),
                    (3,3,'Boleto',1000),
                    (4,4,'Dois cartões',1000),
                    (5,5,'Boleto',1000);

select * from clients;
-- criar estoque
create table productStorage(
		idProdStorage int auto_increment primary key,
        storageLocation varchar(255),
        quantity int default 0
);


insert into productStorage (storageLocation,quantity) values
					('Salvador', 1000),
                    ('Cruz',2000),
                    ('Rio de Janeiro', 10),
                    ('Brasilia', 100),
                    ('São Paulo', 60),
                    ('Salvador', 20);
-- criar fornecedor 

create table supplier(
		idSupplier int auto_increment primary key,
        SocialName varchar(255) not null,
        CNPJ char(15) not null,
        contact char (11) not null,
        constraint unique_supplier unique (CNPJ)
);

insert into supplier (SocialName,CNPJ,contact) values
					('Filhos e Almeida', 123456789123456,21985474),
                    ('Silva eletronics', 987654321123456,21345667),
                    ('Valm Text',543456789654343,21345678);

-- vendeder 
create table seller(
		idSeller int auto_increment primary key,
        SocialName varchar(255) not null,
        CNPJ char(15),
        CPF char(9),
        contact char (11) not null,
        constraint unique_cnpj_seller unique (CNPJ),
        constraint unique_cpf_seller unique (CPF)
);

insert into seller (SocialName,CNPJ,CPF,contact) values
				('T Eltrics', 123456789123456, null,219946287),
                ('B douglas',987654123, null,219943456),
                ('O Mundo', 123456789765345, null,219345456);

create table productSeller(
		idPsellet int,
        idProduct int,
        prodquantity int default 1,
        primary key (idPsellet,idProduct),
        constraint fk_product_saller foreign key (idPsellet) references seller (idSeller),
        constraint fk_product_product foreign key (idProduct) references product (idProduct)
);

insert into productSeller (idPsellet,idProduct,prodquantity) values
					(1,31,80),
                    (2,33,10);

desc productSeller;

create table productOrder(
		idPOproduct int,
        idPOorder int,
        poQuantity int default 1,
        poStatus enum ('Disponivel', 'Sem estoque') default 'Disponivel',
        primary key (idPOproduct,idPOorder),
        constraint fk_productorder_seller foreign key (idPOproduct) references product (idProduct),
        constraint fk_productorder_product foreign key (idPOorder) references orders (idOrder)
        );
        
insert into productOrder (idPOproduct, idPOorder, poQuantity, poStatus) values 
					(31,1,3,null),
                    (32,2,1,null),
                    (33,3,1,null);
			
        
        create table storageLocation(
				idLproduct int,
                idLstorage int,
                location varchar (255) not null,
                primary key (idLproduct,idLstorage),
                constraint fk_storage_location_product foreign key (idLproduct) references product (idProduct),
                constraint fk_storage_location_storage foreign key (idLstorage) references productStorage (idProdStorage)
                );
                
                
insert into storageLocation (idLproduct, idLstorage, location) values
						(31,2,'Rj'),
                        (32,6,'GO');
                      
                        
                        
                        
                show tables;
                
             create table productSupplier(
				idPsSupplier int,
                idPsProduct int,
                quantity int not null,
                primary key (idPsSupplier,idPsProduct),
                constraint fk_product_supplier_supplier foreign key (idPsSupplier) references supplier (idSupplier),
                constraint fk_product_supplier_product foreign key (idPsProduct) references product (idProduct)
                ); 
                
                
insert into productSupplier (idPsSupplier,idPsProduct,quantity) values
						(1,31,500),
                        (1,32,400),
                        (2,34,564),
                        (3,33,5),
                        (2,35,10);
                
                
select * from clients;

select Fname, Lname,Adress  
from clients
where Adress like '%Rua%';

show tables;

-- clients
-- orders
-- payments
-- product
-- productorder
-- productseller
-- productstorage
-- productsupplier
-- seller
-- storagelocation
-- supplier

select * from product
where category = 'Eletrônico';

select count(*) as CategoriaProduto 
from product 
where category = 'Eletrônico';

select * from productseller;

select * from productseller
where idProduct = 33;

select Pname, idProduct from Product
join clients on idClient = 1;

select idClient, Pname, idProduct from Product
join clients on idClient = 1;




